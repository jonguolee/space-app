{"version":3,"sources":["components/Home.js","components/NavBar.js","components/NasaPhoto.js","App.js","reportWebVitals.js","index.js"],"names":["Home","max","useState","quoteData","setQuoteData","useEffect","a","fetch","res","json","data","fetchQuote","className","cursor","show","facts","length","Math","floor","random","content","to","NavBar","path","exact","apiKey","process","NasaPhoto","photoData","setPhotoData","fetchPhoto","media_type","src","url","alt","title","frameBorder","gesture","allow","allowFullScreen","date","explanation","App","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAKe,SAASA,IAAQ,IAiBNC,EAjBK,EACOC,mBAAS,MADhB,mBACpBC,EADoB,KACTC,EADS,KAe3B,GAZAC,qBAAU,WAAM,4CAGZ,8BAAAC,EAAA,sEACsBC,MAAM,iEAD5B,cACUC,EADV,gBAIuBA,EAAIC,OAJ3B,OAIUC,EAJV,OAKIN,EAAaM,GALjB,4CAHY,0DACZC,KASD,KAEER,EAAW,OAAO,wBASvB,OAEI,sBAAKS,UAAU,OAAf,UACI,cAAC,IAAD,CAAQC,OAAQ,CAAEC,MAAM,GAAxB,SACI,oBAAIF,UAAU,QAAd,SAAuBT,EAAUY,OAXvBd,EAW0CE,EAAUY,MAAMC,OAVrEC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMjB,MAUwCmB,YAGjF,cAAC,IAAD,UACI,cAAC,IAAD,CAAMR,UAAU,YAAYS,GAAG,aAA/B,qCClCD,SAASC,IACpB,OACI,qBAAKV,UAAU,SAAf,SACI,6BACI,cAAC,IAAD,CAAMA,UAAU,OAAOW,KAAK,aAAaC,OAAK,EAA9C,8BCJhB,IAAMC,EAASC,2CAEA,SAASC,IAAa,IAAD,EACEzB,mBAAS,MADX,mBACzB0B,EADyB,KACdC,EADc,KAehC,OAZAxB,qBAAU,WAAM,4CAGZ,8BAAAC,EAAA,sEACsBC,MAAM,+CAAD,OAC4BkB,IAFvD,cACUjB,EADV,gBAIuBA,EAAIC,OAJ3B,OAIUC,EAJV,OAKImB,EAAanB,GALjB,4CAHY,0DACZoB,KASD,IAEEF,EAGD,qCACI,cAACN,EAAD,IACA,sBAAKV,UAAU,aAAf,UAC8B,UAAzBgB,EAAUG,WACP,qBACIC,IAAKJ,EAAUK,IACfC,IAAKN,EAAUO,MACfvB,UAAU,UAGd,wBAAQuB,MAAM,cACVH,IAAKJ,EAAUK,IACfG,YAAY,IACZC,QAAQ,QACRC,MAAM,kBACNC,iBAAe,EACf3B,UAAU,UAGlB,gCACI,6BAAKgB,EAAUO,QACf,mBAAGvB,UAAU,OAAb,SAAqBgB,EAAUY,OAC/B,mBAAG5B,UAAU,cAAb,SAA4BgB,EAAUa,uBAzB/B,wB,MCdZ,SAASC,IACtB,OACE,cAAC,IAAD,UACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,IAAD,CAAO+B,UAAW3C,EAAMuB,KAAK,eAC7B,cAAC,IAAD,CAAOoB,UAAWhB,EAAWJ,KAAK,oBCX1C,IAYeqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.958aee7d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typist from \"react-typist\";\r\nimport FadeIn from \"react-fade-in\";\r\n\r\nexport default function Home() {\r\n    const [quoteData, setQuoteData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchQuote();\r\n\r\n        async function fetchQuote() {\r\n            const res = await fetch(\r\n                `https://jonguolee.github.io/space-facts/Data/space-facts.json`\r\n            );\r\n            const data = await res.json();\r\n            setQuoteData(data);\r\n        }\r\n    }, []);\r\n\r\n    if (!quoteData) return <div />;\r\n\r\n    function getRandomInt(max) {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"home\">\r\n            <Typist cursor={{ show: false }}>\r\n                <h1 className=\"fancy\">{quoteData.facts[getRandomInt(quoteData.facts.length)].content}</h1>\r\n            </Typist>\r\n\r\n            <FadeIn>\r\n                <Link className=\"home-link\" to=\"/nasaphoto\">Explore the Cosmos</Link>\r\n            </FadeIn>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n//https://jonguolee.github.io/space-facts/space-facts.json","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <ul>\r\n                <Link className=\"link\" path=\"/space-app\" exact>Take Me Home</Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst apiKey = process.env.REACT_APP_NASA_KEY;\r\n\r\nexport default function NasaPhoto() {\r\n    const [photoData, setPhotoData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchPhoto();\r\n\r\n        async function fetchPhoto() {\r\n            const res = await fetch(\r\n                `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`\r\n            );\r\n            const data = await res.json();\r\n            setPhotoData(data);\r\n        }\r\n    }, []);\r\n\r\n    if (!photoData) return <div />;\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div className=\"nasa-photo\">\r\n                {photoData.media_type === \"image\" ? (\r\n                    <img\r\n                        src={photoData.url}\r\n                        alt={photoData.title}\r\n                        className=\"photo\"\r\n                    />\r\n                ) : (\r\n                    <iframe title=\"space-video\"\r\n                        src={photoData.url}\r\n                        frameBorder=\"0\"\r\n                        gesture=\"media\"\r\n                        allow=\"encrypted-media\"\r\n                        allowFullScreen\r\n                        className=\"photo\"></iframe>\r\n                )}\r\n\r\n                <div>\r\n                    <h1>{photoData.title}</h1>\r\n                    <p className=\"date\">{photoData.date}</p>\r\n                    <p className=\"explanation\">{photoData.explanation}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport NasaPhoto from \"./components/NasaPhoto\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Route component={Home} path=\"/space-app\" />\n        <Route component={NasaPhoto} path=\"/nasaphoto\" />\n      </div>\n    </BrowserRouter>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}